#
# NMDA Changes for NETCONF
#

The Network Management Datastore Architecture defines datastores are a
fundamental concept binding the data models written in the YANG data
modeling language to network management protocols.  This document
updates the NETCONF protocol in order to support the Network
Management Datastore Architecture.

* Introduction

This document updates the NETCONF protocol defined in ^RFC6241^ in
order to support the Network Management Datastore Architecture (NMDA)
defined in ^I-D.ietf-netmod-revised-datastores^.

NETCONF operations defined in ^RFC6241^ refer to the datastores
defined in the original datstore model. Several new NETCONF operations
are required to allow references to the new datastores defined in
^I-D.ietf-netmod-revised-datastores^. Other existing NETCONF
operations like <copy-config>, <lock> and <unlock> are augmented to
allow them to target additional datastores.

In addition the original <get> operation is deprecated, since the
information it returns is no longer needed.  The deficiencies of the
<get> operation were one of the motivations for developing the NMDA.

This document uses the terminology defined by the NMDA
^I-D.ietf-netmod-revised-datastores^.

The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in BCP
14, ^RFC2119^ ^RFC8174^ when, and only when, they appear in all capitals,
as shown here..

* NETCONF Support for NMDA Datastores

This section describes the NETCONF changes needed to support NMDA.
These changes are defined in a new YANG (^RFC7950^) module
"ietf-netconf-datastores".

These changes include the use of source and target parameters based on
the "datastore" identity defined in the "ietf-datastores" module
^I-D.ietf-netmod-revised-datastores^.  The use of identities allows
future expansion in a way that the choice-based strategy from the
original operations (e.g., <get-config>, <edit-config>) do not.

** New NETCONF Operations

Two new operations <get-data> and <edit-data> are defined in this
document in order to support NMDA. These operations are similar
to the <get-config> and <edit-config> operations but they can work
on an extensible set of datastores.

*** The <get-data> Operation

The <get-data> operation retrieves data from a specific NMDA
datastore.  This operation is similar to NETCONF's <get-config>
operation, but adds flexibility in naming the source datastore.

The "source" parameter indicates the datastore which is the source of
the data to be retrieved.  This is a datastore identity.

The <get-data> operation accepts a content filter parameter, similar
to the "filter" parameter of "get-config", but using explicit nodes
for subtree filtering and XPath filtering.

Additional filters are defined to retrieve only "config true" nodes or
nodes matching a given "origin" value.

The parameter "depth" can be used by the client to limit the number
of sub-tree levels that are returned in the reply.

The <get-data> operation also supports the "with-defaults" parameter
as defined in ^RFC6243^.  The supported values follow the constraints
given by the "with-defaults" capability.

**** Origin Metadata Attribute

The <get-data> operation adds a new parameter named "with-origin",
which if present, requests that the server includes "origin" metadata
anotations in its response, as detailed in the NMDA.  This parameter
is only valid for <operational> and any datastores with identities
derived from the "operational" identity.  Otherwise, if an invalid
datastore is specified then an <rpc-error> element is returned with an
<error-tag> value of "invalid-value".  "origin" metadata annotations
are not included unless a client explicitly requests them.

Data from <operational> can come from multiple sources.  The server
should return the most accurate value for the "origin" metadata
annotation as possible, indicating the source of the operational
value, as specified in section 5.3.4 of
^I-D.ietf-netmod-revised-datastores^.

When encoding the origin metadata annotation for a hierarchy of
returned nodes, the annotation may be omitted for a child node when
the value matches that of the parent node, as described in the
ietf-origin YANG module ^I-D.ietf-netmod-revised-datastores^.

The "with-origin" parameter is optional to support.  It is identified
with the URI:

  urn:ietf:params:netconf:capability:with-origin:1.0

*** The <edit-data> Operation

The <edit-data> operation changes the contents of a specific
datastore, similar to the <edit-config> operation, but with additional
flexibility in naming the target datastore.

The "datastore" parameter is a datastore identity that indicates the
desired target datastore where changes should be made.

The "edit-content" parameter from "edit-config" it is modified to
allow use "type anydata" for configuration content, rather than the
"edit-config"'s use of "type anyxml".

The "default-operation" parameter mirrors the parameter of the
<edit-config> operation.

** Augmentations to NETCONF Operations

Several of the operations defined in the base NETCONF YANG module
^RFC6241^ will continue to be used under the NMDA.  The <lock>,
<unlock>, and <validate> operations are augmented with a new
"datastore" leaf can indicate a desired NMDA datastore.

Only writable datastores can be locked.

** RPCs and Actions

RPC operations and actions can be defined in YANG modules.  The
evaluation context for constraints and references in RPC operations
and actions is <operational>, as specified in the NMDA.

Thus, this document updates ^RFC7950^, section 7.15.2, so that the
<action> element contains a hierarchy of nodes that identifies
the node in the operational state datastore.

** YANG Library Capability

RFC Ed.: Update 201X-XX-XX below with correct date.

Support for NMDA requires the server to implement at least revision
201X-XX-XX of the "ietf-yang-library" module defined in
^I-D.nmdsdt-netconf-rfc7895bis^.  The server MUST advertise the
following capability in the <hello> message (line breaks and
whitespaces are used for formatting reasons only):

  urn:ietf:params:netconf:capability:yang-library:1.1?
    revision=<date>&checksum=<checksum-value>

The parameter "revision" has the same value as the revision date of
the "ietf-yang-library" module implemented by the server.  This
parameter MUST be present.

The parameter "checksum" has the same value as the leaf
"/yang-library/checksum" from "ietf-yang-library".  This
parameter MUST be present.

With this mechanism, a client can cache the supported modules for a
server and only update the cache if the "checksum" value in the
<hello> message changes.

This document updates ^RFC7950^, section 5.6.4, to allow servers to
advertise the capability :yang-library:1.1 instead of
:yang-library:1.0, and to implement the subtree "/yang-library"
^I-D.nmdsdt-netconf-rfc7895bis^ instead of "/modules-state".

* NETCONF Datastores YANG Module

This module imports definitions from ^RFC6991^, ^RFC6241^, ^RFC6243',
and ^I-D.ietf-netmod-revised-datastores^.

RFC Ed.: update the date below with the date of RFC publication and
remove this note.

!! include-figure ietf-netconf-datastores.yang extract-to="ietf-netconf-datastores@2017-12-08.yang"

* IANA Considerations

This document registers two capability identifier URNs in the "Network
Configuration Protocol (NETCONF) Capability URNs" registry:

  Index           Capability Identifier
  -------------   ---------------------------------------------------
  :yang-library   urn:ietf:params:netconf:capability:yang-library:1.1
  :with-origin    urn:ietf:params:netconf:capability:with-origin:1.0

This document registers a URI in the "IETF XML Registry" ^RFC3688^.
Following the format in RFC 3688, the following registration has been
made.

    URI: urn:ietf:params:xml:ns:yang:ietf-netconf-datastores

    Registrant Contact: The IESG.

    XML: N/A, the requested URI is an XML namespace.

This document registers a YANG module in the "YANG Module Names"
registry ^RFC6020^.

  name:         ietf-netconf-datastores
  namespace:    urn:ietf:params:xml:ns:yang:ietf-netconf-datastores
  prefix:       ncds
  reference:    RFC XXXX

* Security Considerations

The YANG module defined in this document extends the base operations
of the NETCONF ^RFC6241^ protocol. The lowest NETCONF layer is the
secure transport layer and the mandatory-to-implement secure transport
is Secure Shell (SSH) ^RFC6242^.

The NETCONF access control model ^RFC6536^ provides the means to
restrict access for particular NETCONF or RESTCONF users to a
preconfigured subset of all available NETCONF or RESTCONF protocol
operations and content.

The security considerations for the base NETCONF protocol operations
(see Section 9 of ^RFC6241^) apply to the new NETCONF <get-data> and
<edit-data> operations defined in this document.

# *! start-appendix
#
# * Examples

{{document:
    name ;
    ipr trust200902;
    category std;
    references references.xml;
    updates 7950;
    title "NETCONF Update to Support the Network Management Datastore Architecture";
    contributor "author:Martin Bjorklund:Tail-f Systems:mbj@tail-f.com";
    contributor "author:Juergen Schoenwaelder:Jacobs University:j.schoenwaelder@jacobs-university.de";
    contributor "author:Phil Shafer:Juniper Networks:phil@juniper.net";
    contributor "author:Kent Watsen:Juniper Networks:kwatsen@juniper.net";
    contributor "author:Robert Wilton:Cisco Systems:rwilton@cisco.com";
}}
