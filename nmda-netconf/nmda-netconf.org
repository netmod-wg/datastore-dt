#
# NMDA Changes for NETCONF
#

The "Network Management Datastore Architecture" (NMDA) improves on
NETCONF by adding new features to give more accurate handling of
configuration and operational data.  These include ability to inspect
the current operational values of configuration data, allowing clients
to use identical paths for retrieving the configured values and the
operational values.  These new features require additional operations
in network management applications such as NETCONF.  This draft
details those new operations.

* Introduction

This document provides a YANG model that adds NETCONF (^RFC6241^)
support for the "Network Management Datastore Architecture"
(NMDA) ^I-D.ietf-netmod-revised-datastores^.  NMDA defines a framework
for datastores, a fundamental concept binding network management data
models to network management protocols, enabling data models to be
written in a network management protocol agnostic way.  NETCONF
operations currently refer to the datastores defined in the original
model, so new operations are required to allow references to the new
datastores.

Operations like <copy-config>, <lock> and <unlock> are augmented to
allow them to target additional datastores.

In addition the original <get> operation is deprecated, since the
information it returns is no longer needed.  <get>'s deficiencies were
a major motivation for the NMDA.

** Keywords

The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in BCP
14, ^RFC2119^ ^RFC8174^ when, and only when, they appear in all capitals,
as shown here..

** Terminology

This document uses the terminology defined by the NMDA
^I-D.ietf-netmod-revised-datastores^.

* The NMDA Model for NETCONF

This section describes the changes needed for NMDA support.  These
changes are contained in a new YANG (^RFC7950^) model
"ietf-netconf-datastores".

These changes include the use of source and target parameters based on
the "datastore" identity defined in the "ietf-datastores" from
^I-D.ietf-netmod-revised-datastores^.  The use of identities allows
future expansion in a way that the choice-based strategy from the
original operations (e.g. <get-config>, <edit-config>) do not.

** Operations

Support for the NMDA includes two new operations defined in this
document.

*** The <get-data> Operation

The <get-data> operation retrieves data from a specific NMDA
datastore.  This operation is similar to NETCONF's "get-config"
operation, but adds flexibility in naming the target datastore.

The "source" parameter indicates the datastore which is the source of
the data to be retrieved.  This is a datastore identity.

The "get-data" operation mirrors the "filter" parameter of the
"get-config" operation, but it is modified to use "type anydata" for
configuration content, rather than the "get-config"'s use of "type
anyxml".

An additional filter is defined to retrieve only "config true" nodes.

The "get-data" operation also supports the "with-defaults" parameter
as defined in ^RFC6243^.  The supported values follow the constraints
given by the "with-defaults" capability.

**** Origin Attribute

The "get-data" operation adds a new boolean parameter named
"with-origin", which requests that the server return the "origin"
information as detailed in the NMDA.  This parameter is only valid for
<operational> and any datastores with identities derived from the
"operational" identity.

Data from <operational> can come from multiple sources.  The server
should return the most accurate value for the "origin" attribute as
possible, indicating the source of the operational value.

When encoding the origin attribute for a hierarchy of returned nodes,
the origin attribute may be omitted when the value matches that of the
parent node.

*** The <edit-data> Operation

The <edit-data> operation changes the contents of a specific
datastore, similar to the <edit-config> operation, but with additional
flexibility in naming the target datastore.

The "target" parameter is a datastore identity that indicates the
desired target datastore where changes should be made.

The "edit-content" parameter from "edit-config" it is modified to
allow use "type anydata" for configuration content, rather than the
"edit-config"'s use of "type anyxml".

The "default-operation" parameter mirrors the parameter of the
"edit-config" operation.

** Augmentations to the Base NETCONF Model

Several of the operations defined in the base NETCONF data model
(ietf-netconf@2011-06-01.yang) will continue to be used under the
NMDA.  The <lock>, <unlock>, and <validate> operations are
augmented with a new "datastore" leaf can indicate a desired
NMDA datastore.

Only writable datastores can be locked.

** RPCs and Actions

RPC operations and actions can be defined in YANG modules.  The
evaluation context for constraints and references in operation and
actions is <operational>.

** YANG Library Capability

RFC Ed.: Update 201X-XX-XX below with correct date.

Support for NMDA requires the server to implement at least revision
201X-XX-XX of the "ietf-yang-library" module defined in
^I-D.nmdsdt-netconf-rfc7895bis^.  The server MUST advertise the
following capability in the <hello> message (line breaks and
whitespaces are used for formatting reasons only):

  urn:ietf:params:netconf:capability:yang-library:1.1?
    revision=<date>&checksum=<checksum-value>

The parameter "revision" has the same value as the revision date of
the "ietf-yang-library" module implemented by the server.  This
parameter MUST be present.

The parameter "checksum" has the same value as the leaf
"/yang-library/checksum" from "ietf-yang-library".  This
parameter MUST be present.

With this mechanism, a client can cache the supported modules for a
server and only update the cache if the "checksum" value in the
<hello> message changes.

This document updates ^RFC7950^, section 5.6.4, to allow servers to
advertise the capability :yang-library:1.1 instead of
:yang-library:1.0, and to implement the subtree "/yang-library"
^I-D.nmdsdt-netconf-rfc7895bis^ instead of "/modules-state".

* YANG Model

!! include-figure ietf-netconf-datastores.yang extract-to="ietf-netconf-datastores@2017-08-24.yang"

* IANA Considerations

This document registers one capability identifier URN from the
"Network Configuration Protocol (NETCONF) Capability URNs" registry:

  Index           Capability Identifier
  -------------   ---------------------------------------------------
  :yang-library   urn:ietf:params:netconf:capability:yang-library:1.1

This document registers a URI in the "IETF XML Registry" [RFC3688].
Following the format in RFC 3688, the following registration has been
made.

    URI: urn:ietf:params:xml:ns:yang:ietf-netconf-datastores

    Registrant Contact: The IESG.

    XML: N/A, the requested URI is an XML namespace.

This document registers a YANG module in the "YANG Module Names"
registry [RFC6020].

  name:         ietf-netconf-datastores
  namespace:    urn:ietf:params:xml:ns:yang:ietf-netconf-datastores
  prefix:       ncds
  reference:    RFC XXXX

* Security Considerations

This document has no security considerations.

*! start-appendix

* Examples

{{document:
    name ;
    ipr trust200902;
    category std;
    references references.xml;
    updates 7950;
    title "NETCONF Model for NMDA";
    contributor "author:Martin Bjorklund:Tail-f Systems:mbj@tail-f.com";
    contributor "author:Juergen Schoenwaelder:Jacobs University:j.schoenwaelder@jacobs-university.de";
    contributor "author:Phil Shafer:Juniper Networks:phil@juniper.net";
    contributor "author:Kent Watsen:Juniper Networks:kwatsen@juniper.net";
    contributor "author:Robert Wilton:Cisco Systems:rwilton@cisco.com";
}}
